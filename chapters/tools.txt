

linha do excel para unir texto =UNIRTEXTO(";";VERDADEIRO;(A2:A30))
 

##################################################################################################
############################################# PLOTLY #############################################
##################################################################################################

###################### plotly grafico de um conjunto de dados 

import plotly.express as px
import plotly.graph_objects as go
fig = px.scatter(  x=x_data,   y=sigmoid(x_data, *p0),   template='simple_white', width=700, height=500 )

fig.update_traces(marker=dict(size=10,
                              color='red',
                              line=dict(width=1,
                                        color='black')),
                  selector=dict(mode='markers'))
 
fig.add_trace(go.Scatter(  x = df_aval['avaliacao'], y= df_aval['real_renda'],  mode="markers", line_color="blue"))
 

fig.update_layout(
    title=" ",
    xaxis_title="avaliacao",
    yaxis_title="renda ",
    #legend_title="Legend Title",
    font=dict(
        family="Arial",
        size=20,
        color="black"
    )
)
fig.data = (fig.data[1],fig.data[0] )
fig.show() 



###################### plotly grafico de um conjunto de dados

import plotly.express as px
import plotly.graph_objects as go
fig = px.scatter(df_aval,  x=df_aval["avaliacao"],   y=df_aval["real_soluto"], color=df_aval["uf"], color_discrete_sequence=px.colors.qualitative.G10,  template='simple_white', width=700, height=500 )

fig.update_traces(marker=dict(size=10, 
                              line=dict(width=1,
                                        color='black')),
                  selector=dict(mode='markers'))
  
fig.update_layout(
    title=" ",
    xaxis_title="avaliacao",
    yaxis_title="soluto ",k
    #legend_title="Legend Title",
    font=dict(
        family="Arial",
        size=20,
        color="black"
    )
) 
fig.show() 

##### plotly cores

# dir(px.colors.sequential) # cores continuas disponiveis
# dir(px.colors.qualitative); # cores discretas disponiveis 


##### plotly TRENDLINE

trendline = "rolling", trendline_options=dict(function="median", window=30),  trendline_color_override="red"
trendline="ewm", trendline_options=dict(halflife=3)

trendline="rolling", trendline_options=dict(window=5, win_type="gaussian", function_args=dict(std=2))


show only trendlines
fig.data = [t for t in fig.data if t.mode == "lines"]

# plotly consultar cores continuas e discretas
# dir(px.colors.sequential) # cores continuas disponiveis
# dir(px.colors.qualitative); # cores discretas disponiveis 

 
